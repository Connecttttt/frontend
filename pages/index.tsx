import Head from "next/head";
import styles from "@/styles/Home.module.css";
import { Navbar } from "@/components/Navbar";
import { BRIDGE_CONTRACT_ADDRESS, truncateAddr } from "@/utils";
import { useState, useEffect } from "react";
import { MetaMaskConnector } from "wagmi/connectors/metaMask";
import {
  useAccount,
  useConnect,
  useContractRead,
  useContractWrite,
  usePrepareContractWrite,
} from "wagmi";
import { ADDRESS_ZERO } from "@/utils";
import { BRIDGE_CONTRACT_ABI } from "@/abi";

export default function Home() {
  const [popUp, setPopUp] = useState(false);
  const [userName, setUserName] = useState();

  const connector = new MetaMaskConnector();
  const { connect } = useConnect();
  const { address } = useAccount({
    onConnect({ address }) {
      // @ts-ignore
      localStorage.setItem("connected", address);
    },
    // @ts-ignore
    onDisconnect({ address }) {
      // @ts-ignore
      localStorage.setItem("connected", ADDRESS_ZERO);
    },
  });

  ///////// SMART CONTRACT WRITE FUNCTIONS ///////////

  // SIGN UP
  const { config: signUpConfig } = usePrepareContractWrite({
    address: BRIDGE_CONTRACT_ADDRESS,
    abi: BRIDGE_CONTRACT_ABI,
    functionName: "signUp",
    args: [userName],
  });
  const { write: signUp } = useContractWrite(signUpConfig);

  useEffect(() => {
    let connected = localStorage.getItem("connected");
    console.log("CNCTD", connected);
    // @ts-ignore
    if (connected != ADDRESS_ZERO) connect({ connector });
  }, []);

  return (
    <>
      <Head>
        <title>Bridge | Home</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=dev ice-width, initial-scale=1" />
        <link rel="icon" href="/favicon.png" />
      </Head>
      <main className="main">
        <Navbar setShowPopUp={setPopUp} showSignup={true} />

        <div className={styles.content}>
          <div className={popUp ? styles.heroBlur : styles.hero}>
            <img src="/illustrations/heroImg.png" />
            <p>
              Bridge, User-friendly and robust platform facilitatating secure
              and efficient escrow transactions across different industries and
              domains.
            </p>
            <a href="/">Learn More &gt;</a>
          </div>

          {popUp && (
            <div className={styles.signUpPopUp}>
              <div className={styles.header}>
                <h3>Sign Up</h3>
                <img src="/icons/cancel.png" onClick={() => setPopUp(false)} />
              </div>

              <span>Username</span>
              {/* @ts-ignore */}
              <input onChange={(e) => setUserName(e.target.value)} />
              <button
                className={styles.signUpBtn}
                disabled={!signUp}
                onClick={() => signUp?.()}
              >
                Sign Up
              </button>

              <span>Connected Address</span>
              {/* @ts-ignore */}
              <p>{truncateAddr(address)}</p>
            </div>
          )}
        </div>
      </main>
    </>
  );
}
